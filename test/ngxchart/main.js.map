{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dummydata.ts","webpack:///./src/chart.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<ngx-charts-line-chart\\n        [view]=\\\"view\\\"\\n        [scheme]=\\\"colorScheme\\\"\\n        [results]=\\\"multi\\\"\\n        [gradient]=\\\"gradient\\\"\\n        [xAxis]=\\\"showXAxis\\\"\\n        [yAxis]=\\\"showYAxis\\\"\\n        [legend]=\\\"showLegend\\\"\\n        [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"xAxisLabel\\\"\\n        [yAxisLabel]=\\\"yAxisLabel\\\"\\n        [autoScale]=\\\"autoScale\\\"\\n        [timeline]=\\\"timeline\\\"\\n        (select)=\\\"onSelect($event)\\\">\\n</ngx-charts-line-chart>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component} from '@angular/core';\nimport {ChartService} from \"../chart.service\";\nimport {DummyData} from \"./dummydata\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n\n    constructor(private  chartService: ChartService) {\n        this.getData();\n    }\n\n    title = 'ngxchartsTest';\n\n\n    view: any[] = [700, 400];\n\n    // options\n    showXAxis = true;\n    showYAxis = true;\n    gradient = false;\n    showLegend = true;\n    showXAxisLabel = true;\n    xAxisLabel = 'Number';\n    showYAxisLabel = true;\n    yAxisLabel = 'Color Value';\n    timeline = true;\n\n    colorScheme = {\n        domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n    };\n\n\n    multi: any[] = [];\n\n    getData() {\n\n\n        this.multi = DummyData;\n\n\n        this.chartService.get().subscribe((data) => {\n\n                if (!data[1]) {\n                    return;\n                }\n\n\n                const results = data[1].map((d) => {\n                    return {\n                        name: parseInt(d.date),\n                        value: d.value\n                    };\n\n                });\n\n\n                this.multi = [{\n                    name: 'Data1',\n                    series: results\n                }];\n\n\n            }\n            ,\n            (err) => {\n                console.log(err);\n            }\n        )\n    }\n\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\nimport {ChartService} from \"../chart.service\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\n\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        NgxChartsModule,\n        HttpClientModule,\n        BrowserAnimationsModule\n    ],\n    providers: [ChartService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export const DummyData = [\n    {\n        name: 'Cyan',\n        series: [\n            {\n                name: 5,\n                value: 2650\n            },\n            {\n                name: 10,\n                value: 2800\n            },\n            {\n                name: 15,\n                value: 2000\n            }\n        ]\n    },\n    {\n        name: 'Yellow',\n        series: [\n            {\n                name: 5,\n                value: 2500\n            },\n            {\n                name: 10,\n                value: 3100\n            },\n            {\n                name: 15,\n                value: 2350\n            }\n        ]\n    }\n];","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartService {\n\n  url = 'https://api.worldbank.org/v2/countries/NOR/indicators/NY.GDP.MKTP.KD.ZG?per_page=30&MRV=30&format=json';\n\n  constructor(private http: HttpClient) { }\n\n  get(){\n    return this.http.get(this.url);\n  }\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}